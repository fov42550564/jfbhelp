1. 开启权限服务
sudo mongodb -auth

2. 添加mongodb管理员
use admin;
db.createUser(
    {
        user: "fang",
        pwd: "fang",
        roles: [ { role: "userAdminAnyDatabase", db: "admin" } ]
    }
);

3. 使用管理员账号
mongo -u fang -p fang
或者
mongo
use admin
db.auth("fang", "fang")

4. 添加数据库用户
使用管理员登录后
use shop
db.createUser(
    {
        user: "yun",
        pwd: "fang",
        roles: [ { role: "readWrite", db: "shop" } ]
    }
);
这样 yun 这个账户对shop就用读写权限了

5. 修改用户密码或者权限
将yun的密码修改为yun
db.updateUser(
    'yun',
    {
      pwd: "yun",
      roles: [ { role: "read", db: "shop" } ]
   }
)

6. 删除用户
db.dropUser('yun')
db.dropAllUsers()

附录：MongoDB数据库角色

内建的角色
数据库用户角色：read、readWrite;
数据库管理角色：dbAdmin、dbOwner、userAdmin；
集群管理角色：clusterAdmin、clusterManager、clusterMonitor、hostManager；
备份恢复角色：backup、restore；
所有数据库角色：readAnyDatabase、readWriteAnyDatabase、userAdminAnyDatabase、dbAdminAnyDatabase
超级用户角色：root // 这里还有几个角色间接或直接提供了系统超级用户的访问（dbOwner 、userAdmin、userAdminAnyDatabase）
内部角色：__system
角色说明：
Read：允许用户读取指定数据库
readWrite：允许用户读写指定数据库
dbAdmin：允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile
userAdmin：允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户
clusterAdmin：只在admin数据库中可用，赋予用户所有分片和复制集相关函数的管理权限。
readAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读权限
readWriteAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读写权限
userAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的userAdmin权限
dbAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限。
root：只在admin数据库中可用。超级账号，超级权限
