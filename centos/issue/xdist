#!/bin/bash

source ~/command/common

dir=$PWD
apiServer="https://sp.gzshenou.com"
socketServer="wss://sp.gzshenou.com"
originPort=3020

function genDistForServer() {
    pushd ../${1}/project 1>/dev/null
    vim -e -s config.js -c ":%s#const PRODUCT.*#const PRODUCT = true;#" -c ":%s#apiServer:.*#apiServer: '${2}',#" -c ":%s#authorizationCode:.*#authorizationCode: '${3}',#" -c ":wq"
    npm run dist
    vim -e -s config.js -c ":%s#const PRODUCT.*#const PRODUCT = false;#"  -c ":%s#apiServer:.*#apiServer: 'http://localhost:${originPort}',#" -c ":%s#authorizationCode:.*#authorizationCode: '', // 后台操作密码#" -c ":wq"
    pushd ../dist 1>/dev/null
    tar zcvf app.tar.gz app.js package.json
    mv app.tar.gz $dir/projects/${1}/
    popd 1>/dev/null
    popd 1>/dev/null
}

function genDistForJavaServer() {
    pushd ../${1}/project 1>/dev/null
    __rm .__target
    __mv target .__target
    ./release pro
    mv target/${2}.war $dir/projects/${1}/
    __rm target
    __mv .__target target
    popd 1>/dev/null
}

function genDistForClient() {
    pushd ../${1}/project 1>/dev/null
    vim -e -s config.js -c ":%s#apiServer:.*#apiServer: '${2}',#" -c ":%s#socketServer:.*#socketServer: '${3}',#" -c ":wq"
    npm run dist
    vim -e -s config.js -c ":%s#apiServer:.*#apiServer: 'http://localhost:${originPort}',#" -c ":%s#socketServer:.*#socketServer: 'ws://localhost:${originPort}',#" -c ":wq"
    pushd ../dist 1>/dev/null
    tar zcvf app.tar.gz app.js main.css package.json public
    mv app.tar.gz $dir/projects/${1}/
    popd 1>/dev/null
    popd 1>/dev/null
}

function genDistForApp() {
    pushd ../${1}/project 1>/dev/null
    __rm .__dist
    __mv dist .__dist
    npm run build
    __rm $dir/projects/${1}/app
    mv dist $dir/projects/${1}/app
    __mv .__dist dist
    popd 1>/dev/null
}

function show_version() {
    echo "===== version: $1 ====="
    echo "远程版本："
    echo curl ${apiServer}/sl/apps/${1}/version.json
    curl ${apiServer}/sl/apps/${1}/version.json
    echo
    echo "本地版本（ `pwd`/projects/${1}/version.json ）："
    cat ./projects/${1}/version.json
    if [ "$2" != "yes" ];then
        node -e "fs=require('fs');f=process.argv[1];v=JSON.parse(fs.readFileSync(f));v.versionName=(v.versionName.replace(/\./g,'')*1+1+'').split('').join('.');fs.writeFileSync(f,JSON.stringify(v,null,4))" ./projects/${1}/version.json
        echo "版本号增加1之后的版本："
        cat ./projects/${1}/version.json
    fi
}

function show_help() {
    echo "xdist [-t[targets]]"
    echo ""
    echo "  -t [targets]: targets as follows:"
    echo "      p, s[p: SLPolice_PC, s: SLServer]"
    echo "      uses: -t p+s"
    echo "      uses: -t all"
    echo ""
    echo "  -v[1: add version]: show version"
    echo ""
}

function main() {
    local has_oper p i s all targets version
    has_oper=0; p=1; s=2; all=255;

    __init_opts "$@"
    __check_opts "-t" && targets=$(($_opt_))
    __check_opts "-v" && version=${_opt_:="yes"}
    __check_opts "-h" && show_help && exit
    [ -z "$_hasopt_" -o -z "$targets" ] && show_help && exit

    if (($targets&p));then
        if [ -n "$version" ];then
            show_version SLPolice_PC ${version}
        else
            genDistForClient SLPolice_PC $apiServer $socketServer
        fi
    fi

    if (($targets&s));then
        if [ -n "$version" ];then
            show_version SLServer ${version}
        else
            genDistForServer SLServer $apiServer $authorizationCode
        fi
    fi
}

main "$@"
